name: "Push images on release"

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag, sha, branch'
        required: true
        default: v1.0.0
jobs:
  build-and-push-image-sriov-cni:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [amd64,arm64,ppc64le]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-latest: false

      - name: test
        run: |
           echo ${{ steps.docker_meta.outputs.tags }}

      - name: Build and push sriov-cni
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          platforms: linux/${{ matrix.arch }}
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-${{ matrix.arch }}
          file: ./images/Dockerfile

  push-manifest:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [amd64,arm64,ppc64le]
    needs: build-and-push-image-sriov-cni
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest for multi-arch images
        run: |
          echo "${{ steps.docker_meta.outputs.tags }}-${{ matrix.arch }}"


