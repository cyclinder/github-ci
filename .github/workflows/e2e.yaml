name: e2e-test


on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**.md'

  push:
    branches:
      - main
      - release-*
    paths-ignore:
      - 'docs/**'
      - '**.md'

env:
  KIND_VERSION: v0.12.0


jobs:
  build:
    name: Build on x86
    runs-on: ubuntu-latest
    steps:
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.8
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Unit test
        run:
          echo "Run unit-test"

      - name: Build
        run:
          echo "Run Build"
          test > test.txt

      - name: Upload Image
        uses: actions/upload-artifact@v2
        with:
          name: spider-pool-image-tar
          path: test.txt

  kind-vlan-e2e:
    name: kind-e2e
    runs-on: ubuntu-latest
    needs:
      - build
    timeout-minutes: 60
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Install Tools
        run: |
          # install kind/p2ctl/helm/ginkgo
          make install-tools

      - name: Init Kind Cluster
        run: |
          make kind-init

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: spider-pool-image-tar

      - name: Load Image
        run: |
          echo "Load Image"

      - name: Install Spider
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          shell: bash
          command: |
            echo "Install Spider"

      - name: Run e2e
        run: |
          echo "Run e2e"

      - name: Clean Up
        run: |
          echo "cleanup cluster"


