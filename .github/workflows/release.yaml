name: Auto release

env:
  ONLINE_REGISTER: ghcr.io
  BUILD_PLATFORM: linux/amd64,linux/arm64
  ONLINE_REGISTER_USER: ${{ github.actor }}
  ONLINE_REGISTER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  MERGE_BRANCH: gh-pages
  PR_REVIWER: cyclinder


on:
  push:
    tags:
      - v*
    branches:
      - v*
  workflow_dispatch:
    inputs:
      ref:
        description: 'tag, sha, branch'
        required: true
        default: v1.0.0

jobs:
  get_ref:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.get_ref.outputs.ref }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
            echo "call by workflow_dispatch"
            echo ::set-output name=tag::${{ github.event.inputs.ref }}
          elif ${{ github.event_name == 'push' }} ; then
            echo "trigger by push"
            echo ::set-output name=ref::${GITHUB_REF#refs/*/}
          else
            echo "unexpected event: ${{ github.event_name }}"
            exit 1
          fi

  call-bin-workflow:
    needs: get_ref
    uses: ./.github/workflows/bin-build.yaml
    with:
      tag: ${{ needs.get_ref.outputs.ref }}
    secrets: inherit

  call-image-workflow:
    needs: get_ref
    uses: ./.github/workflows/image-build.yaml
    with:
      ref: ${{ needs.get_ref.outputs.ref }}
      push: true
    secrets: inherit

  create-binary-release:
    runs-on: ubuntu-latest
    name: Create Binary Release
    needs: [get_ref,call-bin-workflow,call-image-workflow]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: binary_files
          path: ./

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.9.0
        with:
          artifacts: "*.tar"
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.get_ref.outputs.ref }}
          name: "Release ${{ steps.get_ref.outputs.ref }}"

  chart-release:
    name: Create Chart Release
    runs-on: ubuntu-latest
    needs: [call-bin-workflow,call-image-workflow]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
