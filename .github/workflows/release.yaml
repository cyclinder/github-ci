name: Auto release

env:
  ONLINE_REGISTER: ghcr.io
  BUILD_PLATFORM: linux/amd64,linux/arm64
  ONLINE_REGISTER_USER: ${{ github.actor }}
  ONLINE_REGISTER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  MERGE_BRANCH: gh-pages
  PR_REVIWER: cyclinder


on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag, sha, branch'
        required: true
        default: v1.0.0

jobs:
  get_ref:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_ref.outputs.tag }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
            echo "call by self workflow_dispatch"
            echo ::set-output name=tag::${{ github.event.inputs.tag }}
            echo ::set-output name=branch::main
          elif ${{ github.event_name == 'push' }} ; then
            echo "call by push tag"
            echo ::set-output name=tag::${GITHUB_REF##*/}
            echo ::set-output name=branch::${GITHUB_REF##*/}
          else
            echo "unexpected event: ${{ github.event_name }}"
            exit 1
          fi

      - name: Checkout
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_ref.outputs.branch }}

      - name: Create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-${{ steps.get_ref.outputs.tag }}'
          sha: '${{ github.sha }}'

  call-bin-workflow:
    needs: get_ref
    uses: ./.github/workflows/bin-build.yaml
    with:
      tag: ${{ needs.get_ref.outputs.tag }}
    secrets: inherit

  call-image-workflow:
    needs: get_ref
    uses: ./.github/workflows/image-build.yaml
    with:
      ref: ${{ needs.get_ref.outputs.tag }}
      push: true
    secrets: inherit

  create-binary-release:
    runs-on: ubuntu-latest
    name: Create Binary Release
    needs: [get_ref,call-bin-workflow,call-image-workflow]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: binary_files
          path: ./

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.9.0
        with:
          artifacts: "*.tar"
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
          generateReleaseNotes: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.get_ref.outputs.tag }}
          name: "Release ${{ needs.get_ref.outputs.tag }}"

  Generate-Changelog-to-file:
    runs-on: ubuntu-latest
    name: Generate Changelog
    needs: [create-binary-release]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Save release-note to file
        id: save
        run: |
            latest_release=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest |yq '.name')
            latest_release=`echo ${latest_release} | awk '{print $2}'`
            echo "release: ${latest_release}"
            echo "release=${latest_release}" >> $GITHUB_OUTPUT
            curl \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest |yq '.body' > changelog-${latest_release}.md
            echo "123" >> changelog-${latest_release}.md
            cat changelog-${latest_release}.md
            cp -rp changelog-${latest_release}.md docs/
            cp -rp changelog-${latest_release}.md docs/
            rm -rf changelog-${latest_release}.md

      - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        with:
          add: 'docs'
          message: "Auto Update Changelog for ${{ steps.save.outputs.release }}"

  chart-release:
    name: Create Chart Release
    runs-on: ubuntu-latest
    needs: [call-bin-workflow,call-image-workflow]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
